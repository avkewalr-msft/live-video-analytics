{
	"@apiVersion": "1.0",
	"name": "EVRtoAssetsByHttpExtension",
	"properties": {
		"description": "Event-based video recording to Assets based on events from http extension",
		"parameters": [
			{
				"name": "rtspUserName",
				"type": "String",
				"description": "rtsp source user name.",
				"default": "dummyUserName"
			},
			{
				"name": "rtspPassword",
				"type": "String",
				"description": "rtsp source password.",
				"default": "dummyPassword"
			},
			{
				"name": "rtspUrl",
				"type": "String",
				"description": "rtsp Url"
			},
            {
                "name": "inferencingUrl",
                "type": "String",
                "description": "inferencing Url"
            },
            {
                "name": "inferencingUserName",
                "type": "String",
                "description": "inferencing endpoint user name.",
                "default": "dummyUserName"
            },
            {
                "name": "inferencingPassword",
                "type": "String",
                "description": "inferencing endpoint password.",
                "default": "dummyPassword"
            },
            {
                "name": "imageEncoding",
                "type": "String",
                "description": "image encoding for frames",
                "default": "bmp"
            },            
			{
				"name": "hubSinkOutputName",
				"type": "String",
				"description": "hub sink output name",
				"default": "inferenceOutput"
			}
		],
		"sources": [
			{
				"@type": "#Microsoft.Media.MediaGraphRtspSource",
				"name": "rtspSource",
				"endpoint": {
					"@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
					"url": "${rtspUrl}",
					"credentials": {
						"@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
						"username": "${rtspUserName}",
						"password": "${rtspPassword}"
					}
				}
			}
		],
		"processors": [
            {
                "@type": "#Microsoft.Media.MediaGraphFrameRateFilterProcessor",
                "name": "frameRateFilter",
                "inputs": [
                  {
                    "nodeName": "rtspSource"
                  }
                ],
                "maximumFps": 10
            },
            {
            "@type": "#Microsoft.Media.MediaGraphHttpExtension",
            "name": "httpExtension",
            "endpoint": {
                "@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
                "url": "${inferencingUrl}",
                "credentials": {
                "@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
                "username": "${inferencingUserName}",
                "password": "${inferencingPassword}"
                }
            },
            "image": {
                "scale": {
                "mode": "preserveAspectRatio",
                "width": "416",
                "height": "416"
                },
                "format": {
                "@type": "#Microsoft.Media.MediaGraphImageFormatEncoded",
                "encoding": "${imageEncoding}"
                }
            },
            "inputs": [
                {
                "nodeName": "frameRateFilter"
                }
            ]
            },
			{
				"@type": "#Microsoft.Media.MediaGraphSignalGateProcessor",
				"name": "signalGateProcessor",
				"inputs": [
					{
						"nodeName": "httpExtension"
					},
					{
						"nodeName": "rtspSource"
					}
				],
				"activationEvaluationWindow": "PT1S",
				"activationSignalOffset": "PT0S",
				"minimumActivationTime": "PT30S",
				"maximumActivationTime": "PT30S"
			}
		],
		"sinks": [
			{
				"@type": "#Microsoft.Media.MediaGraphAssetSink",
				"name": "assetSink",
				"assetNamePattern": "sampleAssetFromEVR-LVAEdge-${System.DateTime}",
				"segmentLength": "PT30S",
				"LocalMediaCacheMaximumSizeMiB": "200",
				"localMediaCachePath": "/var/lib/azuremediaservices/tmp/",
				"inputs": [
					{
						"nodeName": "signalGateProcessor"
					}
				]
			},
			{
				"@type": "#Microsoft.Media.MediaGraphIoTHubMessageSink",
				"name": "hubSink",
				"hubOutputName": "${hubSinkOutputName}",
				"inputs": [
					{
						"nodeName": "httpExtension"
					}
				]
			}
		]
	}
}