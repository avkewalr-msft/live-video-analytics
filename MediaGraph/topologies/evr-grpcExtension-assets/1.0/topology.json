{
	"@apiVersion": "1.0",
	"name": "EVRtoAssetsByGrpcExtension",
	"properties": {
		"description": "Event-based video recording to Assets based on events from grpc extension",
		"parameters": [
			{
				"name": "rtspUserName",
				"type": "String",
				"description": "rtsp source user name.",
				"default": "dummyUserName"
			},
			{
				"name": "rtspPassword",
				"type": "String",
				"description": "rtsp source password.",
				"default": "dummyPassword"
			},
			{
				"name": "rtspUrl",
				"type": "String",
				"description": "rtsp Url"
			},
            {
                "name": "inferencingUrl",
                "type": "String",
                "description": "inferencing Url"
            },
            {
                "name": "inferencingUserName",
                "type": "String",
                "description": "inferencing endpoint user name.",
                "default": "dummyUserName"
            },
            {
                "name": "inferencingPassword",
                "type": "String",
                "description": "inferencing endpoint password.",
                "default": "dummyPassword"
            },
            {
                "name": "grpcExtensionAddress",
                "type": "String",
                "description": "grpc LVA Extension Address",
                "default": "tcp://lvaextension:44000"
              },
              {
                "name": "grpcExtensionUserName",
                "type": "String",
                "description": "inferencing endpoint user name.",
                "default": "dummyUserName"
              },
              {
                "name": "grpcExtensionPassword",
                "type": "String",
                "description": "inferencing endpoint password.",
                "default": "dummyPassword"
              },      
              {
                "name": "hubSinkOutputName",
                "type": "String",
                "description": "Hub sink output name",
                "default": "iothubsinkoutput"
              },
              {
                "name": "imageEncoding",
                "type": "String",
                "description": "image encoding for frames",
                "default": "jpeg"
              },      
              {
                "name": "imageQuality",
                "type": "String",
                "description": "image encoding quality for frames (valid for JPG encoding)",
                "default": "90"
              },
              {
                "name": "imageScaleMode",
                "type": "String",
                "description": "image scaling mode",
                "default": "pad"
              },
              {
                "name": "frameWidth",
                "type": "String",
                "description": "Width of the video frame to be received from LVA.",
                "default": "416"
              },
              {
                "name": "frameHeight",
                "type": "String",
                "description": "Height of the video frame to be received from LVA.",
                "default": "416"
              }
		],
		"sources": [
			{
				"@type": "#Microsoft.Media.MediaGraphRtspSource",
				"name": "rtspSource",
				"endpoint": {
					"@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
					"url": "${rtspUrl}",
					"credentials": {
						"@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
						"username": "${rtspUserName}",
						"password": "${rtspPassword}"
					}
				}
			}
		],
		"processors": [
            {
                "@type": "#Microsoft.Media.MediaGraphFrameRateFilterProcessor",
                "name": "frameRateFilter",
                "inputs": [
                  {
                    "nodeName": "rtspSource"
                  }
                ],
                "maximumFps": 2
            },
            {
                "@type": "#Microsoft.Media.MediaGraphGrpcExtension",
                "name": "grpcExtension",
                "endpoint": {
                  "@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
                  "url": "${grpcExtensionAddress}",
                  "credentials": {
                    "@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
                    "username": "${grpcExtensionUserName}",
                    "password": "${grpcExtensionPassword}"
                  }
                },
                "dataTransfer": {
                  "mode": "sharedMemory",
                  "SharedMemorySizeMiB": "5"
                },
                "image": {
                  "scale": {
                    "mode": "${imageScaleMode}",
                    "width": "${frameWidth}",
                    "height": "${frameHeight}"
                  },
                  "format": {
                    "@type": "#Microsoft.Media.MediaGraphImageFormatEncoded",
                    "encoding": "${imageEncoding}",
                    "quality": "${imageQuality}"
                  }
                },
                "inputs": [
                  {
                    "nodeName": "frameRateFilter"
                  }
                ]
              },
              {
                "@type": "#Microsoft.Media.MediaGraphSignalGateProcessor",
                "name": "signalGateProcessor",
                "inputs": [
                  {
                    "nodeName": "grpcExtension"
                  },
                  {
                    "nodeName": "rtspSource"
                  }
                ],
                "activationEvaluationWindow": "PT1S",
                "activationSignalOffset": "PT0S",
                "minimumActivationTime": "PT30S",
                "maximumActivationTime": "PT30S"
              }
		],
		"sinks": [
			{
				"@type": "#Microsoft.Media.MediaGraphAssetSink",
				"name": "assetSink",
				"assetNamePattern": "sampleAssetFromEVR-LVAEdge-${System.DateTime}",
				"segmentLength": "PT30S",
				"LocalMediaCacheMaximumSizeMiB": "200",
				"localMediaCachePath": "/var/lib/azuremediaservices/tmp/",
				"inputs": [
					{
						"nodeName": "signalGateProcessor"
					}
				]
			},
			{
				"@type": "#Microsoft.Media.MediaGraphIoTHubMessageSink",
				"name": "hubSink",
				"hubOutputName": "${hubSinkOutputName}",
				"inputs": [
					{
						"nodeName": "grpcExtension"
					}
				]
			}
		]
	}
}